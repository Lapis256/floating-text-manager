name: Make release

on:
    push:
        tags:
            - "v*"
    workflow_dispatch:

jobs:
    build:
        name: create release
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Install tool
              run: |
                  sudo apt update
                  sudo apt install -y zip wget

            - name: Install nodejs
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Setup regolith
              run: |
                  wget https://github.com/Bedrock-OSS/regolith/releases/download/0.0.18/regolith_0.0.18_Linux_x86_64.tar.gz
                  tar -xvf regolith_0.0.18_Linux_x86_64.tar.gz regolith
                  sudo chmod +x regolith
                  ./regolith install-all

            - name: Build
              run: |
                  ./regolith run

            - name: Copy pack_icon.png
              run: |
                  cp pack_icon.png build/RP
                  cp pack_icon.png build/BP

            - name: Make resource.mcpack
              run: |
                  cd build/RP
                  zip -r ../resource.mcpack *
                  cd ..

            - name: Make behavior.mcpack
              run: |
                  cd build/BP
                  zip -r ../behavior.mcpack *
                  cd ..

            - name: Make debug_stick.mcaddon
              run: |
                  zip floating_text_manager.mcaddon resource.mcpack behavior.mcpack

            - name: Create release
              id: create_release
              uses: actions/create-release@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  tag_name: ${{ github.ref }}
                  release_name: Release ${{ github.ref }}
                  draft: true
                  prerelease: false

            - name: Upload debug_stick.mcaddon to release
              id: upload-release-asset
              uses: actions/upload-release-asset@v1
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  upload_url: ${{ steps.create_release.outputs.upload_url }}
                  asset_path: ./floating_text_manager.mcaddon
                  asset_name: floating_text_manager.mcaddon
                  asset_content_type: application/zip
